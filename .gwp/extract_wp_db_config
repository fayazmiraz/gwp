#!/bin/bash

###### Dependencies ######
##########################
# ---- Global Variables
# DB_NAME
# DB_USER
# DB_PASSWORD
# 
# ---- External Functions
# error_exit
##########################

get_wp_db_config() {

    #    -----------------------------------------------------------------
    #    Function gets DB config from wp-config.php file provided as the
    #    first argument & saves in the following Global vars:
    #    DB_NAME
    #    DB_USER
    #    DB_PASSWORD
    #    
    #    =================================================================
    #    @usage
    #    get_wp_db_config $wp_config_file_path
    #    -----------------------------------------------------------------

    TMP_IFS="$IFS"
    # define IFS for wp-config.php variable extraction
    IFS=' "'"'"$'\t'
    
    local def=""
    local const=""
    local comma=""
    local val=""
    local end=""
    local line=""
    wp_config="$1"
    if [[ ! -f "$wp_config" ]]; then
        error_exit "$LINENO: Error, wp config [file=$wp_config] is not a valid file!"
    fi
    # all DB defines in wp-config
    local DB_defines=$( cat "$wp_config" | grep '^[ \t]*define[ \t]*([ \t]*["'"']DB_" )
    
    # @todo instead of perseing DB_NAME, DB_USER etc. separately, use a function, since they are very similar CODE
    #       a simple function with different parameter passing will do!
    # 
    # DB_NAME line from defines lines
    line=$( grep '\<DB_NAME\>' <<< "$DB_defines" )
    # get values
    read -r def const comma val end <<< "$line"
    DB_NAME="$val"

    # DB_USER line from defines lines
    line=$( grep '\<DB_USER\>' <<< "$DB_defines" )
    # get values
    read -r def const comma val end <<< "$line"
    DB_USER="$val"

    # DB_PASSWORD line from defines lines
    line=$( grep '\<DB_PASSWORD\>' <<< "$DB_defines" )
    # get values
    read -r def const comma val end <<< "$line"
    DB_PASSWORD="$val"

    # redefine IFS back to the last value
    IFS="$TMP_IFS"
}